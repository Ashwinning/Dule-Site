import{j as e,e as c,g as i,i as d,a as n,R as m,c as u,d as g}from"../chunks/chunk-NsPXdt-o.js";/* empty css                      */const l=void 0,x=void 0,f=[],j=[],y=({})=>e.jsx(c,{className:"w-body",children:e.jsx(i,{className:"w-box",children:e.jsx(i,{className:"w-box"})})}),h=({data:o})=>{const{pageMeta:t}=o,{origin:r}=new URL(o.url);let s=t.socialImageUrl;return t.socialImageAssetName&&(s=`${r}${d({src:t.socialImageAssetName,format:"raw"})}`),e.jsxs(e.Fragment,{children:[o.url&&e.jsx("meta",{property:"og:url",content:o.url}),e.jsx("title",{children:t.title}),e.jsx("meta",{property:"og:title",content:t.title}),t.description&&e.jsxs(e.Fragment,{children:[e.jsx("meta",{name:"description",content:t.description}),e.jsx("meta",{property:"og:description",content:t.description})]}),e.jsx("meta",{property:"og:type",content:"website"}),l,s&&e.jsx("meta",{property:"og:image",content:t.socialImageUrl}),l,t.excludePageFromSearch&&e.jsx("meta",{name:"robots",content:"noindex, nofollow"}),t.custom.map(({property:a,content:p})=>e.jsx("meta",{property:a,content:p},a)),x,f.map(a=>e.jsx("link",{rel:"preload",href:`${n}${a.name}`,as:"font",crossOrigin:"anonymous"},a.id)),j.map(a=>e.jsx("link",{rel:"preload",href:`${n}${a.name}`,as:"image"},a.id))]})},v=Object.freeze(Object.defineProperty({__proto__:null,Head:h},Symbol.toStringTag,{value:"Module"})),S=({data:o})=>{const{system:t,resources:r,url:s}=o;return e.jsx(m.Provider,{value:{imageLoader:d,assetBaseUrl:n,imageBaseUrl:u,resources:r},children:e.jsx(y,{system:t},s)})},P=Object.freeze(Object.defineProperty({__proto__:null,default:S},Symbol.toStringTag,{value:"Module"})),z={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"/renderer/+onRenderClient.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:g}},Head:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/test-cards/+Head.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:v}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/test-cards/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:P}}};export{z as configValuesSerialized};
